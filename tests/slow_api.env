## 
# Slow API Response
# 
# This test simulates an API that takes too long to respond, ensuring the script handles timeouts properly.
# 
# Simulating a Slow API:
#   Use a Python mock server to simulate a slow response:
#     ```
#     python3 -m http.server 8000 &
#     # Simulate slow response using sleep
#     echo -e "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\n" > slow_response.txt
#     sleep 10 && cat slow_response.txt | nc -l 8000 &
#     ```
# 
# Expected Behavior:
#   - The script times out on the API request.
#   - Logs the timeout error and retries the configured number of times.
#   - Sends a “down” notification if all retries fail.
# 
# Test command:
# `../check_endpoint.sh > slow_api.log 2>&1`
# 
# Verify:
#   ```
#   grep "API request failed" slow_api.log
#   grep "API is down due to slow response." slow_api.log
#   ```
# 
HASS_API_URL="http://localhost:8000/slow"
HASS_AUTH_TOKEN="dummy_token"
SMS_TO="+1234567890"
SMS_FROM="sender@example.com"
ENDPOINT_DOWN_MESSAGE="API is down due to slow response."
ENDPOINT_UP_MESSAGE="API is back online."