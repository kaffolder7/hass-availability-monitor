## 
# Test for Retry Intervals for API Checks
# 
# This test verifies that the script respects the retry interval and retry count when the API is unavailable.
# 
# Mock API Setup:
#   Simulate an API that always fails:
#     ```
#     python3 -m http.server 8000 &
#     echo -e "HTTP/1.1 500 Internal Server Error\r\nContent-Type: text/plain\r\n\r\n" > error_response.txt
#     cat error_response.txt | nc -l 8000 &
#     ```
# 
# Expected Behavior:
#   - The script attempts to connect to the API 3 times, with a 5-second delay between each attempt.
#   - Logs indicate each retry attempt.
#   - Sends a “down” notification after exhausting retries.
# 
# Test command:
# `../check_endpoint.sh > retry_intervals.log 2>&1`
# 
# Verify:
#   1. Logs show retries at 5-second intervals:
#     `grep "Retrying in 5 seconds" retry_intervals.log`
#   2. A “down” notification is logged after retries are exhausted:
#     `grep "Sending SMS.*API is down." retry_intervals.log`
# 
HASS_API_URL="http://localhost:8000"
HASS_AUTH_TOKEN="dummy_token"
SMS_TO="+1234567890"
SMS_FROM="sender@example.com"
ENDPOINT_DOWN_MESSAGE="API is down."
ENDPOINT_UP_MESSAGE="API is back online."
RETRY_COUNT=3
RETRY_INTERVAL=5