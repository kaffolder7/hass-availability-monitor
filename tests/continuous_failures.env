## 
# Test for Notifications for Continuous Failures
# 
# This test ensures the script sends periodic notifications if the API remains down for an extended period (e.g., 1 hour).
# 
# Mock API Setup:
#   Simulate a failing API:
#     ```
#     python3 -m http.server 8000 &
#     echo -e "HTTP/1.1 500 Internal Server Error\r\nContent-Type: text/plain\r\n\r\n" > error_response.txt
#     cat error_response.txt | nc -l 8000 &
#     ```
# 
# Expected Behavior:
#   - The script sends “down” notifications at the configured interval (30 seconds) as long as the API remains down.
#   - Notifications stop when the API recovers.
# 
# Test command:
# `../check_endpoint.sh > continuous_failures.log 2>&1`
# 
# Verify:
#   1. Logs show periodic notifications at 30-second intervals:
#     `grep "API has been down for 30 seconds" continuous_failures.log`
#   2. Notifications are sent for each interval:
#     `grep "Sending SMS.*API is still down after prolonged monitoring" continuous_failures.log`
# 
HASS_API_URL="http://localhost:8000"
HASS_AUTH_TOKEN="dummy_token"
SMS_TO="+1234567890"
SMS_FROM="sender@example.com"
ENDPOINT_DOWN_MESSAGE="API is still down after prolonged monitoring."
ENDPOINT_UP_MESSAGE="API is back online."
RETRY_COUNT=3
RETRY_INTERVAL=5
CHECK_INTERVAL=10
CONTINUOUS_FAILURE_INTERVAL=30  # New variable for periodic notifications